{
  "contractName": "OracleNodeStakingContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingTokenRepresentation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "stakingTokenRepresentation",
      "outputs": [
        {
          "internalType": "contract stMasaToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingTokenRepresentation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenRepresentation\",\"outputs\":[{\"internalType\":\"contract stMasaToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/OracleNodeStakingContract.sol\":\"OracleNodeStakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"project:/contracts/MasaToken.sol\":{\"keccak256\":\"0xd2c96a0e5f0eec66ecf45b1ae38caaaf1dc57adf7ad096dc9c4130a8f70efffa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a62ccb1f465cc63f63fc3579d45c1fbbbed6e7de76e8dc2aa79db792c9df484\",\"dweb:/ipfs/QmNQxLSypjasb46DymgjRzVoYyzN5gCModgRfaQne4dv8T\"]},\"project:/contracts/OracleNodeStakingContract.sol\":{\"keccak256\":\"0xa6b314cf470456ef66ae69297dc77895f4bdf3b6c44fafaaf6603dcde5d7204d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://064887ddf14e3b3ec53a060b00403b75586983cc6341dcdd90e7095c904ceea2\",\"dweb:/ipfs/QmUMjhqLintBqJGDDbL2vXhgWPQv6pwJ4ngPfmFTuHKZ9F\"]},\"project:/contracts/stMasaToken.sol\":{\"keccak256\":\"0x54bc4cdc8abecd8af4efbe8ec5e23f89a37b02b14e3770c3023b6225c97acc26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c39aa61ed35e9db5b1d279f64a5f1877925328902086349806d5ef04cf9611ad\",\"dweb:/ipfs/QmSfeqHdRTF1GdyC2hKZgVp9jXq2f68CVu5fpW8HKZNAeY\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161063d38038061063d83398101604081905261002f91610081565b6001600081905580546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b61057a806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806316934fc4146100675780632e1a7d4d1461009a57806370a08231146100af57806372f702f3146100d8578063a694fc3a14610103578063ddb90ae214610116575b600080fd5b610087610075366004610494565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ad6100a83660046104e6565b610129565b005b6100876100bd366004610494565b6001600160a01b031660009081526003602052604090205490565b6001546100eb906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b6100ad6101113660046104e6565b6102ed565b6002546100eb906001600160a01b031681565b61013161043a565b336000908152600360205260409020548111156101a35760405162461bcd60e51b815260206004820152602560248201527f576974686472617720616d6f756e742065786365656473207374616b656420616044820152641b5bdd5b9d60da1b60648201526084015b60405180910390fd5b33600090815260036020526040812080548392906101c2908490610517565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024b91906104c4565b50600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561029257600080fd5b505af11580156102a6573d6000803e3d6000fd5b50506040518381523392507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d591506020015b60405180910390a26102ea6001600055565b50565b6102f561043a565b33600090815260036020526040812080548392906103149084906104ff565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a391906104c4565b506002546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156103f057600080fd5b505af1158015610404573d6000803e3d6000fd5b50506040518381523392507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d91506020016102d8565b6002600054141561048d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161019a565b6002600055565b6000602082840312156104a657600080fd5b81356001600160a01b03811681146104bd57600080fd5b9392505050565b6000602082840312156104d657600080fd5b815180151581146104bd57600080fd5b6000602082840312156104f857600080fd5b5035919050565b600082198211156105125761051261052e565b500190565b6000828210156105295761052961052e565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207baa0ac6bea0c90964e455383a93744e3a7a358dce6da7af4757e149d324cbfe64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806316934fc4146100675780632e1a7d4d1461009a57806370a08231146100af57806372f702f3146100d8578063a694fc3a14610103578063ddb90ae214610116575b600080fd5b610087610075366004610494565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ad6100a83660046104e6565b610129565b005b6100876100bd366004610494565b6001600160a01b031660009081526003602052604090205490565b6001546100eb906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b6100ad6101113660046104e6565b6102ed565b6002546100eb906001600160a01b031681565b61013161043a565b336000908152600360205260409020548111156101a35760405162461bcd60e51b815260206004820152602560248201527f576974686472617720616d6f756e742065786365656473207374616b656420616044820152641b5bdd5b9d60da1b60648201526084015b60405180910390fd5b33600090815260036020526040812080548392906101c2908490610517565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024b91906104c4565b50600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561029257600080fd5b505af11580156102a6573d6000803e3d6000fd5b50506040518381523392507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d591506020015b60405180910390a26102ea6001600055565b50565b6102f561043a565b33600090815260036020526040812080548392906103149084906104ff565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a391906104c4565b506002546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156103f057600080fd5b505af1158015610404573d6000803e3d6000fd5b50506040518381523392507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d91506020016102d8565b6002600054141561048d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161019a565b6002600055565b6000602082840312156104a657600080fd5b81356001600160a01b03811681146104bd57600080fd5b9392505050565b6000602082840312156104d657600080fd5b815180151581146104bd57600080fd5b6000602082840312156104f857600080fd5b5035919050565b600082198211156105125761051261052e565b500190565b6000828210156105295761052961052e565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207baa0ac6bea0c90964e455383a93744e3a7a358dce6da7af4757e149d324cbfe64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:491:22",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:22",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:22"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:22"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:22",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:22",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:22",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:22"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:22"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:22"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:22",
                "type": ""
              }
            ],
            "src": "14:177:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:195:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:59:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "434:29:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:49:22"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:22",
                "type": ""
              }
            ],
            "src": "196:293:22"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
      "id": 22,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3222:22",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:22",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:22"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:22"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:22",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:22",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:22"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:22"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:22",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:22"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:22"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:22",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:22",
                "type": ""
              }
            ],
            "src": "14:286:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "383:199:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "429:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "438:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "441:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "431:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "431:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "431:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "404:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "413:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "400:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "425:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "396:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "393:52:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "454:29:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "473:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "467:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:16:22"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "458:5:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "536:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "545:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "548:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "538:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "538:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "538:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "505:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "526:5:22"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "519:6:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "519:13:22"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "512:6:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "512:21:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "502:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "502:32:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:40:22"
                  },
                  "nodeType": "YulIf",
                  "src": "492:60:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:15:22",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "571:5:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "349:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "360:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "372:6:22",
                "type": ""
              }
            ],
            "src": "305:277:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "657:110:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "703:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "712:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "715:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "705:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "705:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "705:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "678:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "687:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "674:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "699:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "670:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "670:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "667:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "728:33:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "751:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "738:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "738:23:22"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "728:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "623:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "634:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "646:6:22",
                "type": ""
              }
            ],
            "src": "587:180:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "929:218:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "939:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "951:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "947:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "947:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "939:4:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "974:29:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:3:22",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "997:1:22",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "988:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "988:11:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1001:1:22",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "984:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:19:22"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "978:2:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1019:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1034:6:22"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1042:2:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1030:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1030:15:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1012:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:34:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1012:34:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1066:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1077:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1062:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:18:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1086:6:22"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1094:2:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1082:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1082:15:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1055:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:43:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1055:43:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1118:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1114:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1114:18:22"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1134:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1107:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1107:34:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1107:34:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "882:9:22",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "893:6:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "901:6:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "909:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "920:4:22",
                "type": ""
              }
            ],
            "src": "772:375:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1281:145:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1291:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1303:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1314:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1299:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1299:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1291:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1333:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:22"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1364:3:22",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1369:1:22",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1360:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1360:11:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1373:1:22",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1356:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1356:19:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:32:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1326:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:51:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1326:51:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1397:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1408:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1393:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1393:18:22"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1413:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1386:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1386:34:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1386:34:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1242:9:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1253:6:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1261:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1272:4:22",
                "type": ""
              }
            ],
            "src": "1152:274:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1547:102:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1557:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1569:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1580:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1565:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1557:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1599:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1614:6:22"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1630:3:22",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1635:1:22",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1626:11:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1639:1:22",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1622:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:19:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1610:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1610:32:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1592:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1592:51:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1592:51:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1376__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1516:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1527:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1538:4:22",
                "type": ""
              }
            ],
            "src": "1431:218:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1775:102:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1785:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1797:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1808:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1793:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1785:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1827:9:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1842:6:22"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1858:3:22",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1863:1:22",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1854:3:22"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1854:11:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1867:1:22",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1850:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1850:19:22"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1838:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1838:32:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1820:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1820:51:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1820:51:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_stMasaToken_$3784__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1744:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1755:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1766:4:22",
                "type": ""
              }
            ],
            "src": "1654:223:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2056:227:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2073:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2084:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2066:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2066:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2066:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2107:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2118:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2103:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2103:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2123:2:22",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2096:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2096:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2096:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2146:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2157:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2142:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2142:18:22"
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e742065786365656473207374616b65642061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2162:34:22",
                        "type": "",
                        "value": "Withdraw amount exceeds staked a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2135:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:62:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2135:62:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2217:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2228:2:22",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2213:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2213:18:22"
                      },
                      {
                        "hexValue": "6d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2233:7:22",
                        "type": "",
                        "value": "mount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2206:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2206:35:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2206:35:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2250:27:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2262:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2273:3:22",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2258:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2258:19:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2250:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dfd48541c5fbc2a810b6c1053b2c1e4c49758c1ff9936a28c84c6a362745819e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2033:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2047:4:22",
                "type": ""
              }
            ],
            "src": "1882:401:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2462:181:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2479:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2490:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:21:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2513:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2524:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2509:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2509:18:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2529:2:22",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2502:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2552:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2563:2:22",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2548:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2548:18:22"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2568:33:22",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2541:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2541:61:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2541:61:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2611:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2623:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2634:2:22",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2619:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2611:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2439:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2453:4:22",
                "type": ""
              }
            ],
            "src": "2288:355:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2749:76:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2759:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2771:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2782:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2767:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2767:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2759:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2801:9:22"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2812:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2794:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:25:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2794:25:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2718:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2729:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2740:4:22",
                "type": ""
              }
            ],
            "src": "2648:177:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2878:80:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2905:22:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2907:16:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2907:18:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2907:18:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2894:1:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2901:1:22"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2897:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2897:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2891:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2891:13:22"
                  },
                  "nodeType": "YulIf",
                  "src": "2888:39:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2936:16:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2947:1:22"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2950:1:22"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2943:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2943:9:22"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2936:3:22"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2861:1:22",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2864:1:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2870:3:22",
                "type": ""
              }
            ],
            "src": "2830:128:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3012:76:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3034:22:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3036:16:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3036:18:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3036:18:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3028:1:22"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3031:1:22"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3025:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3025:8:22"
                  },
                  "nodeType": "YulIf",
                  "src": "3022:34:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3065:17:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3077:1:22"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3080:1:22"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3073:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:9:22"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3065:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2994:1:22",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2997:1:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3003:4:22",
                "type": ""
              }
            ],
            "src": "2963:125:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3125:95:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3142:1:22",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3149:3:22",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3154:10:22",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3145:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3145:20:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3135:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3135:31:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3135:31:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3182:1:22",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3185:4:22",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3175:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:15:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3175:15:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3206:1:22",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3209:4:22",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3199:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3199:15:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3199:15:22"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3093:127:22"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1376__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_stMasaToken_$3784__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_dfd48541c5fbc2a810b6c1053b2c1e4c49758c1ff9936a28c84c6a362745819e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Withdraw amount exceeds staked a\")\n        mstore(add(headStart, 96), \"mount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 22,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "597:2047:20:-:0;;;1173:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:5;1821:7;:22;;;1255:36:20;;-1:-1:-1;;;;;1255:36:20;;;-1:-1:-1;;;;;;1255:36:20;;;;;;;1301:26;:69;;;;;;;;;;;597:2047;;14:177:22;93:13;;-1:-1:-1;;;;;135:31:22;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;597:2047:20;;;;;;",
  "deployedSourceMap": "597:2047:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2794:25:22;;;2782:2;2767:18;862:41:20;;;;;;;;2074:333;;;;;;:::i;:::-;;:::i;:::-;;2535:107;;;;;;:::i;:::-;-1:-1:-1;;;;;2620:15:20;2594:7;2620:15;;;:6;:15;;;;;;;2535:107;657:26;;;;;-1:-1:-1;;;;;657:26:20;;;;;;-1:-1:-1;;;;;1610:32:22;;;1592:51;;1580:2;1565:18;657:26:20;1431:218:22;1543:270:20;;;;;;:::i;:::-;;:::i;715:45::-;;;;;-1:-1:-1;;;;;715:45:20;;;2074:333;2261:21:5;:19;:21::i;:::-;2155:10:20::1;2148:18;::::0;;;:6:::1;:18;::::0;;;;;:28;-1:-1:-1;2148:28:20::1;2140:78;;;::::0;-1:-1:-1;;;2140:78:20;;2084:2:22;2140:78:20::1;::::0;::::1;2066:21:22::0;2123:2;2103:18;;;2096:30;2162:34;2142:18;;;2135:62;-1:-1:-1;;;2213:18:22;;;2206:35;2258:19;;2140:78:20::1;;;;;;;;;2235:10;2228:18;::::0;;;:6:::1;:18;::::0;;;;:28;;2250:6;;2228:18;:28:::1;::::0;2250:6;;2228:28:::1;:::i;:::-;::::0;;;-1:-1:-1;;2266:12:20::1;::::0;:41:::1;::::0;-1:-1:-1;;;2266:41:20;;2288:10:::1;2266:41;::::0;::::1;1326:51:22::0;1393:18;;;1386:34;;;-1:-1:-1;;;;;2266:12:20;;::::1;::::0;:21:::1;::::0;1299:18:22;;2266:41:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2317:26:20::1;::::0;:39:::1;::::0;-1:-1:-1;;;2317:39:20;;::::1;::::0;::::1;2794:25:22::0;;;-1:-1:-1;;;;;2317:26:20;;::::1;::::0;:31:::1;::::0;2767:18:22;;2317:39:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2371:29:20::1;::::0;2794:25:22;;;2381:10:20::1;::::0;-1:-1:-1;2371:29:20::1;::::0;-1:-1:-1;2782:2:22;2767:18;2371:29:20::1;;;;;;;;2303:20:5::0;1716:1;2809:7;:22;2629:209;2303:20;2074:333:20;:::o;1543:270::-;2261:21:5;:19;:21::i;:::-;1613:10:20::1;1606:18;::::0;;;:6:::1;:18;::::0;;;;:28;;1628:6;;1606:18;:28:::1;::::0;1628:6;;1606:28:::1;:::i;:::-;::::0;;;-1:-1:-1;;1644:12:20::1;::::0;:60:::1;::::0;-1:-1:-1;;;1644:60:20;;1670:10:::1;1644:60;::::0;::::1;1012:34:22::0;1690:4:20::1;1062:18:22::0;;;1055:43;1114:18;;;1107:34;;;-1:-1:-1;;;;;1644:12:20;;::::1;::::0;:25:::1;::::0;947:18:22;;1644:60:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1714:26:20::1;::::0;:51:::1;::::0;-1:-1:-1;;;1714:51:20;;1746:10:::1;1714:51;::::0;::::1;1326::22::0;1393:18;;;1386:34;;;-1:-1:-1;;;;;1714:26:20;;::::1;::::0;:31:::1;::::0;1299:18:22;;1714:51:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1780:26:20::1;::::0;2794:25:22;;;1787:10:20::1;::::0;-1:-1:-1;1780:26:20::1;::::0;-1:-1:-1;2782:2:22;2767:18;1780:26:20::1;2648:177:22::0;2336:287:5;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:5;;2490:2:22;2460:63:5;;;2472:21:22;2529:2;2509:18;;;2502:30;2568:33;2548:18;;;2541:61;2619:18;;2460:63:5;2288:355:22;2460:63:5;1759:1;2598:7;:18;2336:287::o;14:286:22:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:22;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:22:o;305:277::-;372:6;425:2;413:9;404:7;400:23;396:32;393:52;;;441:1;438;431:12;393:52;473:9;467:16;526:5;519:13;512:21;505:5;502:32;492:60;;548:1;545;538:12;587:180;646:6;699:2;687:9;678:7;674:23;670:32;667:52;;;715:1;712;705:12;667:52;-1:-1:-1;738:23:22;;587:180;-1:-1:-1;587:180:22:o;2830:128::-;2870:3;2901:1;2897:6;2894:1;2891:13;2888:39;;;2907:18;;:::i;:::-;-1:-1:-1;2943:9:22;;2830:128::o;2963:125::-;3003:4;3031:1;3028;3025:8;3022:34;;;3036:18;;:::i;:::-;-1:-1:-1;3073:9:22;;2963:125::o;3093:127::-;3154:10;3149:3;3145:20;3142:1;3135:31;3185:4;3182:1;3175:15;3209:4;3206:1;3199:15",
  "source": "// contracts/contracts/OracleNodeStakingContract.sol\n// SPDX-License-Identifier: MIT\n// This contract is used for staking tokens in the Oracle Node\npragma solidity ^0.8.7;\n\n// Importing required libraries and contracts\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // Interface for ERC20 tokens\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\"; // To prevent re-entrancy attacks\nimport \"./MasaToken.sol\"; // The token to be staked\nimport \"./stMasaToken.sol\"; // The token representing the stake\n\n// The contract inherits from ReentrancyGuard to prevent re-entrancy attacks\ncontract OracleNodeStakingContract is ReentrancyGuard {\n    IERC20 public stakingToken; // The token to be staked\n    stMasaToken public stakingTokenRepresentation; // The token representing the stake\n\n    // Mapping to keep track of the stakes of each address\n    mapping(address => uint256) public stakes;\n\n    // Events to be emitted when tokens are staked or withdrawn\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n\n    // The constructor sets the staking token and the token representing the stake\n    constructor(address _stakingToken, address _stakingTokenRepresentation) {\n        stakingToken = IERC20(_stakingToken);\n        stakingTokenRepresentation = stMasaToken(_stakingTokenRepresentation);\n    }\n\n    // Function to stake tokens. It updates the stake, transfers the tokens to the contract, mints the token representing the stake, and emits the Staked event\n    function stake(uint256 amount) external nonReentrant {\n        stakes[msg.sender] += amount;\n        stakingToken.transferFrom(msg.sender, address(this), amount);\n        stakingTokenRepresentation.mint(msg.sender, amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    // Function to withdraw staked tokens. It checks if the amount to be withdrawn is less than or equal to the staked amount, updates the stake, transfers the tokens back to the user, burns the token representing the stake, and emits the Withdrawn event\n    function withdraw(uint256 amount) external nonReentrant {\n        require(stakes[msg.sender] >= amount, \"Withdraw amount exceeds staked amount\");\n        stakes[msg.sender] -= amount;\n        stakingToken.transfer(msg.sender, amount);\n        stakingTokenRepresentation.burn(amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    // Function to check the balance of a particular account - this is called by the oracle node to check isStaked status\n    function balanceOf(address account) external view returns (uint256) {\n        return stakes[account];\n    }\n}",
  "sourcePath": "/Users/brendanplayford/masa-oracle/contracts/contracts/OracleNodeStakingContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/OracleNodeStakingContract.sol",
    "exportedSymbols": {
      "AccessControl": [
        315
      ],
      "AccessControlEnumerable": [
        440
      ],
      "Context": [
        1640
      ],
      "ERC165": [
        1893
      ],
      "ERC20": [
        1298
      ],
      "ERC20Burnable": [
        1420
      ],
      "ERC20Pausable": [
        1457
      ],
      "ERC20PresetMinterPauser": [
        1618
      ],
      "EnumerableSet": [
        3489
      ],
      "IAccessControl": [
        513
      ],
      "IAccessControlEnumerable": [
        538
      ],
      "IERC165": [
        1905
      ],
      "IERC20": [
        1376
      ],
      "IERC20Metadata": [
        1482
      ],
      "MasaToken": [
        3547
      ],
      "Math": [
        2771
      ],
      "OracleNodeStakingContract": [
        3696
      ],
      "Pausable": [
        646
      ],
      "ReentrancyGuard": [
        711
      ],
      "SignedMath": [
        2876
      ],
      "Strings": [
        1869
      ],
      "stMasaToken": [
        3784
      ]
    },
    "id": 3697,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3549,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "148:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3550,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3697,
        "sourceUnit": 1377,
        "src": "219:56:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 3551,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3697,
        "sourceUnit": 712,
        "src": "306:62:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MasaToken.sol",
        "file": "./MasaToken.sol",
        "id": 3552,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3697,
        "sourceUnit": 3548,
        "src": "403:25:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/stMasaToken.sol",
        "file": "./stMasaToken.sol",
        "id": 3553,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3697,
        "sourceUnit": 3785,
        "src": "455:27:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3554,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 711,
              "src": "635:15:20"
            },
            "id": 3555,
            "nodeType": "InheritanceSpecifier",
            "src": "635:15:20"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3696,
        "linearizedBaseContracts": [
          3696,
          711
        ],
        "name": "OracleNodeStakingContract",
        "nameLocation": "606:25:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "72f702f3",
            "id": 3558,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "671:12:20",
            "nodeType": "VariableDeclaration",
            "scope": 3696,
            "src": "657:26:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1376",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 3557,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3556,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1376,
                "src": "657:6:20"
              },
              "referencedDeclaration": 1376,
              "src": "657:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1376",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddb90ae2",
            "id": 3561,
            "mutability": "mutable",
            "name": "stakingTokenRepresentation",
            "nameLocation": "734:26:20",
            "nodeType": "VariableDeclaration",
            "scope": 3696,
            "src": "715:45:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_stMasaToken_$3784",
              "typeString": "contract stMasaToken"
            },
            "typeName": {
              "id": 3560,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3559,
                "name": "stMasaToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3784,
                "src": "715:11:20"
              },
              "referencedDeclaration": 3784,
              "src": "715:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_stMasaToken_$3784",
                "typeString": "contract stMasaToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16934fc4",
            "id": 3565,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "897:6:20",
            "nodeType": "VariableDeclaration",
            "scope": 3696,
            "src": "862:41:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3564,
              "keyType": {
                "id": 3562,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "870:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "862:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3563,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "881:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3571,
            "name": "Staked",
            "nameLocation": "980:6:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3567,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1003:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3571,
                  "src": "987:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3569,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1017:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3571,
                  "src": "1009:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:38:20"
            },
            "src": "974:51:20"
          },
          {
            "anonymous": false,
            "id": 3577,
            "name": "Withdrawn",
            "nameLocation": "1036:9:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3573,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1062:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "1046:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1076:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "1068:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:38:20"
            },
            "src": "1030:54:20"
          },
          {
            "body": {
              "id": 3596,
              "nodeType": "Block",
              "src": "1245:132:20",
              "statements": [
                {
                  "expression": {
                    "id": 3588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3584,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3558,
                      "src": "1255:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1376",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3586,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3579,
                          "src": "1277:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3585,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1376,
                        "src": "1270:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1376_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1270:21:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1376",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1255:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1376",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3589,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:36:20"
                },
                {
                  "expression": {
                    "id": 3594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3590,
                      "name": "stakingTokenRepresentation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3561,
                      "src": "1301:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_stMasaToken_$3784",
                        "typeString": "contract stMasaToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3592,
                          "name": "_stakingTokenRepresentation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3581,
                          "src": "1342:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3591,
                        "name": "stMasaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3784,
                        "src": "1330:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_stMasaToken_$3784_$",
                          "typeString": "type(contract stMasaToken)"
                        }
                      },
                      "id": 3593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1330:40:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_stMasaToken_$3784",
                        "typeString": "contract stMasaToken"
                      }
                    },
                    "src": "1301:69:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_stMasaToken_$3784",
                      "typeString": "contract stMasaToken"
                    }
                  },
                  "id": 3595,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:69:20"
                }
              ]
            },
            "id": 3597,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3579,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "1193:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3597,
                  "src": "1185:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3581,
                  "mutability": "mutable",
                  "name": "_stakingTokenRepresentation",
                  "nameLocation": "1216:27:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3597,
                  "src": "1208:35:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1184:60:20"
            },
            "returnParameters": {
              "id": 3583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:20"
            },
            "scope": 3696,
            "src": "1173:204:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3637,
              "nodeType": "Block",
              "src": "1596:217:20",
              "statements": [
                {
                  "expression": {
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3604,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3565,
                        "src": "1606:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3607,
                      "indexExpression": {
                        "expression": {
                          "id": 3605,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1613:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1613:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1606:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3608,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "1628:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1606:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:28:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1670:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1670:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3618,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1690:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleNodeStakingContract_$3696",
                              "typeString": "contract OracleNodeStakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OracleNodeStakingContract_$3696",
                              "typeString": "contract OracleNodeStakingContract"
                            }
                          ],
                          "id": 3617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1682:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3616,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1682:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1682:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3620,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "1697:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3611,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "1644:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "1644:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1644:60:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3622,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:60:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1746:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1746:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3628,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "1758:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3623,
                        "name": "stakingTokenRepresentation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "1714:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_stMasaToken_$3784",
                          "typeString": "contract stMasaToken"
                        }
                      },
                      "id": 3625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1562,
                      "src": "1714:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1714:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3630,
                  "nodeType": "ExpressionStatement",
                  "src": "1714:51:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3632,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1787:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1787:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3634,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "1799:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3631,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3571,
                      "src": "1780:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:26:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3636,
                  "nodeType": "EmitStatement",
                  "src": "1775:31:20"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 3638,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3602,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3601,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 676,
                  "src": "1583:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1583:12:20"
              }
            ],
            "name": "stake",
            "nameLocation": "1552:5:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3599,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1566:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3638,
                  "src": "1558:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1557:16:20"
            },
            "returnParameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:20"
            },
            "scope": 3696,
            "src": "1543:270:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3682,
              "nodeType": "Block",
              "src": "2130:277:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3646,
                            "name": "stakes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3565,
                            "src": "2148:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3649,
                          "indexExpression": {
                            "expression": {
                              "id": 3647,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2155:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2155:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2148:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3650,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3640,
                          "src": "2170:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2148:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576974686472617720616d6f756e742065786365656473207374616b656420616d6f756e74",
                        "id": 3652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2178:39:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfd48541c5fbc2a810b6c1053b2c1e4c49758c1ff9936a28c84c6a362745819e",
                          "typeString": "literal_string \"Withdraw amount exceeds staked amount\""
                        },
                        "value": "Withdraw amount exceeds staked amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dfd48541c5fbc2a810b6c1053b2c1e4c49758c1ff9936a28c84c6a362745819e",
                          "typeString": "literal_string \"Withdraw amount exceeds staked amount\""
                        }
                      ],
                      "id": 3645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2140:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:78:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3654,
                  "nodeType": "ExpressionStatement",
                  "src": "2140:78:20"
                },
                {
                  "expression": {
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3655,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3565,
                        "src": "2228:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3658,
                      "indexExpression": {
                        "expression": {
                          "id": 3656,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2235:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2235:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2228:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3659,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3640,
                      "src": "2250:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2228:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3661,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:28:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3665,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2288:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2288:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3667,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3640,
                        "src": "2300:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3662,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "2266:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1343,
                      "src": "2266:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:41:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3669,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:41:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3673,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3640,
                        "src": "2349:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3670,
                        "name": "stakingTokenRepresentation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "2317:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_stMasaToken_$3784",
                          "typeString": "contract stMasaToken"
                        }
                      },
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3783,
                      "src": "2317:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3675,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:39:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3677,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2381:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2381:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3679,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3640,
                        "src": "2393:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3676,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3577,
                      "src": "2371:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2371:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3681,
                  "nodeType": "EmitStatement",
                  "src": "2366:34:20"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 3683,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3643,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3642,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 676,
                  "src": "2117:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "2117:12:20"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2083:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3640,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2100:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3683,
                  "src": "2092:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2091:16:20"
            },
            "returnParameters": {
              "id": 3644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2130:0:20"
            },
            "scope": 3696,
            "src": "2074:333:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3694,
              "nodeType": "Block",
              "src": "2603:39:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3690,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "2620:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3692,
                    "indexExpression": {
                      "id": 3691,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3685,
                      "src": "2627:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2620:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3689,
                  "id": 3693,
                  "nodeType": "Return",
                  "src": "2613:22:20"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 3695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2544:9:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3685,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2562:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "2554:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:17:20"
            },
            "returnParameters": {
              "id": 3689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3688,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "2594:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:9:20"
            },
            "scope": 3696,
            "src": "2535:107:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3697,
        "src": "597:2047:20",
        "usedErrors": []
      }
    ],
    "src": "148:2496:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xbB1C7dbAF150f7176A3699C36AC9489805329796",
      "transactionHash": "0x60b2face33dc474d0d001a3954211a393ccc171c37e0c21a6c0c4e7a35a38de8"
    }
  },
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-11-27T05:46:29.313Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}